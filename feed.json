{
    "version": "https://jsonfeed.org/version/1",
    "title": "ROOTX",
    "description": "rootx space",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/07/19/log22-12-20/",
            "url": "http://example.com/2024/07/19/log22-12-20/",
            "title": "",
            "date_published": "2024-07-19T06:38:10.343Z",
            "content_html": "<h3 id=\"steam-安装\"><a class=\"anchor\" href=\"#steam-安装\">#</a> Steam++ 安装</h3>\n<h5 id=\"下载\"><a class=\"anchor\" href=\"#下载\">#</a> 下载</h5>\n<ul>\n<li>\n<p><a href=\"%5Bhttps://steampp.net/%5D(https://steampp.net/)\">Steam++ 官网</a></p>\n</li>\n<li>\n<p>会下载一个集合包，包含了各个平台的安装包，选择 Linux 的 deb 安装包</p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h5>\n<ul>\n<li><code>sudo dpkg -i Steam++_linux_x64_[version].deb</code></li>\n</ul>\n<p> </p>\n<h5 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h5>\n<ul>\n<li>\n<p>端口无法监听</p>\n<ul>\n<li>\n<p><a href=\"Steam++_linux_x64_v2.8.4.deb\">官方解决办法原文</a></p>\n</li>\n<li>\n<p>命令允许程序监听 1024 以下端口</p>\n<p><code>sudo setcap cap_net_bind_service=+eip /usr/share/Steam++/Steam++</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Host 文件读取权限受限</p>\n<blockquote>\n<p>仅限于 Host 代理模式下</p>\n</blockquote>\n<ul>\n<li>\n<p>避免每次启动关闭加速需要输入密码，打开终端执行以下命令： <code>sudo chmod a+w /etc/hosts</code></p>\n</li>\n<li>\n<p>如输入上面命令还提示无法 hosts 错误请尝试执行下面命令： <code>sudo chmod a+r /etc/hosts</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>被浏览器拦截</p>\n<blockquote>\n<p>显示 “不是专有连接” 等提示，无效证书</p>\n</blockquote>\n<ul>\n<li>\n<p>解决办法：在浏览器设置中导入证书，从 <code>颁发机构</code> 导入</p>\n</li>\n<li>\n<p>证书本地存放地址：</p>\n<ul>\n<li>\n<p><code>~/.local/share/Steam++</code> (用户文件夹下)</p>\n</li>\n<li>\n<p>通过 GUI 打开： <code>网络加速</code>  =&gt;  <code>...</code>  =&gt;  <code>打开证书文件夹</code></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<p> </p>\n<h3 id=\"git-安装及配置\"><a class=\"anchor\" href=\"#git-安装及配置\">#</a> Git 安装及配置</h3>\n<blockquote>\n<p>Git 已经在 22-12-16 安装但未记录</p>\n<p>22-12-20 使用 Steam<ins> 设置代理代替 Clash，原来使用 Clash 时需设置手动代理，给 Git 也设置了代理，在使用 Steam</ins> 导致 GitHub 无法访问，删除原来的代理即可</p>\n</blockquote>\n<p> </p>\n<h5 id=\"安装-2\"><a class=\"anchor\" href=\"#安装-2\">#</a> 安装</h5>\n<ul>\n<li>\n<p>更新 apt</p>\n<pre><code>sudo apt update\nsudo apt upgrade\n</code></pre>\n</li>\n<li>\n<p>下载 Git</p>\n<p><code>sudo apt install git</code></p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h5>\n<blockquote>\n<p>设置代理</p>\n</blockquote>\n<ul>\n<li>\n<p>使用命令设置 socks 或者 http 代理</p>\n<pre><code># http\ngit config --global http.proxy http://127.0.0.1:8080\ngit config --global https.proxy https://127.0.0.1:8080\n\n# socks\ngit config --global http.proxy 'socks5://127.0.0.1:1080' \ngit config --global https.proxy 'socks5://127.0.0.1:1080'\n</code></pre>\n</li>\n<li>\n<p>使用命令行取消代理</p>\n<pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy http\n</code></pre>\n</li>\n<li>\n<p>直接修改.gitconfig 文件，新建或修改以下内容</p>\n<p><code>vim ~/.gitconfig</code></p>\n<pre><code>[http]\n\nproxy = socks5://127.0.0.1:1080\n\n[https]\n\nproxy = socks5://127.0.0.1:1080\n</code></pre>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h5>\n<ul>\n<li>\n<p>初始化本地仓库</p>\n<p><code>git init</code></p>\n</li>\n<li>\n<p>更新修改</p>\n<p><code>git add .</code></p>\n</li>\n<li>\n<p>提交版本到本地</p>\n<p><code>git commit -m '版本号'</code></p>\n</li>\n<li>\n<p>添加远程仓库链接</p>\n<p><code>git remote add origin [repository address]</code></p>\n</li>\n<li>\n<p>更新本地文件到远程仓库</p>\n<blockquote>\n<p>由于远程库是空的，我们第一次推送 <code>master</code>  分支时，加上了 <code>-u</code>  参数，Git 不但会把本地的 <code>master</code>  分支内容推送的远程新的 <code>master</code>  分支，还会把本地的 <code>master</code>  分支和远程的 <code>master</code>  分支关联起来，在以后的推送或者拉取时就可以简化命令</p>\n</blockquote>\n<p><code>git push -u origin master</code></p>\n<ul>\n<li>\n<ul>\n<li><code>git push -u origin master</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/text1/",
            "url": "http://example.com/2024/04/19/text1/",
            "title": "Log1",
            "date_published": "2024-04-19T14:29:19.654Z",
            "content_html": "<h3 id=\"使用ventoy安装多系统\"><a class=\"anchor\" href=\"#使用ventoy安装多系统\">#</a> 使用 ventoy 安装多系统</h3>\n<ul>\n<li>MBR GPT 区别</li>\n</ul>\n<h3 id=\"开机没有系统选择界面\"><a class=\"anchor\" href=\"#开机没有系统选择界面\">#</a> 开机没有系统选择界面</h3>\n<ol>\n<li>使用 boot-repairs 修复引导程序\n<ul>\n<li>有报错，uefi 和 legecy 冲突，改 bios 设置为 uefi（或仅 uefi）</li>\n</ul>\n</li>\n<li>重启后更新 grub\n<ul>\n<li><code>sudo update-grub</code></li>\n<li><code>sudo update-grub2</code></li>\n</ul>\n</li>\n<li>知识点\n<ul>\n<li>学习</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"主文件目录中文文件名改为英文\"><a class=\"anchor\" href=\"#主文件目录中文文件名改为英文\">#</a> 主文件目录中文文件名改为英文</h3>\n<ul>\n<li>切换语言，中文切换到英文，重启后同意更改文件名</li>\n<li>再从英文切换到中文，重启后不同意更改文件名且不再提醒</li>\n</ul>\n<h3 id=\"安装浏览器\"><a class=\"anchor\" href=\"#安装浏览器\">#</a> 安装浏览器</h3>\n<ul>\n<li>chrome</li>\n<li>edge</li>\n</ul>\n<h3 id=\"vpn\"><a class=\"anchor\" href=\"#vpn\">#</a> VPN</h3>\n<ul>\n<li>仅渡口没有 clash</li>\n</ul>\n<h3 id=\"替换grub主题\"><a class=\"anchor\" href=\"#替换grub主题\">#</a> 替换 grub 主题</h3>\n<ul>\n<li><a href=\"https://www.gnome-look.org/browse/cat/109/\">grub 主题资源</a></li>\n<li>其中一个主题 dedsec ，运行 pyton 脚本后需要更新 grub，且网站上的资源不能用，github 上的仓库可以用</li>\n</ul>\n<h3 id=\"修改分区\"><a class=\"anchor\" href=\"#修改分区\">#</a> 修改分区</h3>\n<ul>\n<li>没有尝试，暂时根目录够用</li>\n<li>根目录分区多给点，因为很多软件默认安装在根目录</li>\n<li>有需要可以尝试的方法\n<ul>\n<li>gparted（可能需要借助 u 盘，因为 ubuntu 无法卸载正在使用的挂在点，/home 的进程非常多，一旦杀掉就死机）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"安装vscode\"><a class=\"anchor\" href=\"#安装vscode\">#</a> 安装 vscode</h3>\n<h3 id=\"vscode-markdown\"><a class=\"anchor\" href=\"#vscode-markdown\">#</a> vscode markdown</h3>\n<ul>\n<li>Markdown All in One</li>\n<li>Markdown Preview Enhanced</li>\n<li>Paste Image</li>\n</ul>\n<h3 id=\"安装git建立一个linux操作日志\"><a class=\"anchor\" href=\"#安装git建立一个linux操作日志\">#</a> 安装 git，建立一个 linux 操作日志</h3>\n<h3 id=\"修改输入法\"><a class=\"anchor\" href=\"#修改输入法\">#</a> 修改输入法</h3>\n<h3 id=\"安装clash\"><a class=\"anchor\" href=\"#安装clash\">#</a> 安装 Clash</h3>\n<ul>\n<li>相关教程\n<ul>\n<li><a href=\"https://www.cnblogs.com/mozhen/p/16306061.html\">桌面版下载教程及桌面图标设置</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/430035973\">命令行下载教程及自定义 service 设置</a></li>\n</ul>\n</li>\n<li>安装过程整理</li>\n<li>问题\n<ul>\n<li>安装完成后需要通过界面点击<a href=\"https://clash.razord.top/\"> Clash Core</a> 打开<strong>网页端</strong>\n<ul>\n<li>不通过桌面端需要配置<strong>主机端口</strong>及<strong>密钥</strong></li>\n<li><strong>只需打开一次</strong>，此后直接打开桌面端即可</li>\n</ul>\n</li>\n<li>关闭 clash 后主机由于代理设置不能正常访问网络，需要关闭代理\n<ul>\n<li>测试：主机关闭代理设置，网页端 -&gt; 设置 -&gt; 设置为系统代理</li>\n<li>自动化：设置自定义服务，在退出时执行关闭代理命令（或者直接修改 clash 本身的 quit 相关脚本）\n<ul>\n<li>测试 hellotest.service</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>确定 clash 的打开方式，方便快捷\n<ul>\n<li>最终添加快捷方式</li>\n<li>将 <code>clash.desktop</code>  添加到 <code>/usr/share/applications</code>  可以在 “显示应用程序” 中显示</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"修改默认浏览器为-edge\"><a class=\"anchor\" href=\"#修改默认浏览器为-edge\">#</a> 修改默认浏览器为 edge</h3>\n<ul>\n<li><code>sudo update-alternatives --config x-www-browser</code></li>\n<li>设置 =&gt; 默认应用程序 =&gt; 浏览器</li>\n</ul>\n<h3 id=\"ubuntu2204lts-安装-imagemagick源码\"><a class=\"anchor\" href=\"#ubuntu2204lts-安装-imagemagick源码\">#</a> Ubuntu22.04LTS 安装 ImageMagick (源码)</h3>\n<ul>\n<li><a href=\"https://www.xtuos.com/5754.html\">如何在 Ubuntu 22.04 LTS 上安装 ImageMagick</a></li>\n<li>升级库和安装依赖\n<ul>\n<li><code>sudo apt update</code></li>\n<li><code>sudo apt upgrade</code></li>\n<li>安装 gcc、build build-essential、make</li>\n<li><code>sudo apt install make build-essential automake libltdl-dev git</code></li>\n</ul>\n</li>\n<li>从 github 上下载源码（网络问题没 clone）\n<ul>\n<li><a href=\"https://github.com/ImageMagick/ImageMagick\">Github : ImageMagick - repository</a></li>\n<li><code>unzip [file-name]</code></li>\n<li><code>cd [file-name]</code></li>\n</ul>\n</li>\n<li>初始化\n<ul>\n<li><code>./configure</code></li>\n<li><code>./configure --with-modules</code></li>\n</ul>\n</li>\n<li>编译\n<ul>\n<li><code>sudo make</code></li>\n<li><code>sudo make install</code></li>\n</ul>\n</li>\n<li>动态链接库\n<ul>\n<li><code>sudo ldconfig /usr/local/lib</code></li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/hello-world/",
            "url": "http://example.com/2024/04/19/hello-world/",
            "title": "Hello World",
            "date_published": "2024-04-19T09:22:27.559Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}