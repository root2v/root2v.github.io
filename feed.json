{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/04/19/log/log22-12-20/",
            "url": "http://example.com/2024/04/19/log/log22-12-20/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.049Z",
            "content_html": "<h3 id=\"steam-安装\"><a class=\"anchor\" href=\"#steam-安装\">#</a> Steam++ 安装</h3>\n<h5 id=\"下载\"><a class=\"anchor\" href=\"#下载\">#</a> 下载</h5>\n<ul>\n<li>\n<p><a href=\"%5Bhttps://steampp.net/%5D(https://steampp.net/)\">Steam++ 官网</a></p>\n</li>\n<li>\n<p>会下载一个集合包，包含了各个平台的安装包，选择 Linux 的 deb 安装包</p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h5>\n<ul>\n<li><code>sudo dpkg -i Steam++_linux_x64_[version].deb</code></li>\n</ul>\n<p> </p>\n<h5 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h5>\n<ul>\n<li>\n<p>端口无法监听</p>\n<ul>\n<li>\n<p><a href=\"Steam++_linux_x64_v2.8.4.deb\">官方解决办法原文</a></p>\n</li>\n<li>\n<p>命令允许程序监听 1024 以下端口</p>\n<p><code>sudo setcap cap_net_bind_service=+eip /usr/share/Steam++/Steam++</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Host 文件读取权限受限</p>\n<blockquote>\n<p>仅限于 Host 代理模式下</p>\n</blockquote>\n<ul>\n<li>\n<p>避免每次启动关闭加速需要输入密码，打开终端执行以下命令： <code>sudo chmod a+w /etc/hosts</code></p>\n</li>\n<li>\n<p>如输入上面命令还提示无法 hosts 错误请尝试执行下面命令： <code>sudo chmod a+r /etc/hosts</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>被浏览器拦截</p>\n<blockquote>\n<p>显示 “不是专有连接” 等提示，无效证书</p>\n</blockquote>\n<ul>\n<li>\n<p>解决办法：在浏览器设置中导入证书，从 <code>颁发机构</code> 导入</p>\n</li>\n<li>\n<p>证书本地存放地址：</p>\n<ul>\n<li>\n<p><code>~/.local/share/Steam++</code> (用户文件夹下)</p>\n</li>\n<li>\n<p>通过 GUI 打开： <code>网络加速</code>  =&gt;  <code>...</code>  =&gt;  <code>打开证书文件夹</code></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<p> </p>\n<h3 id=\"git-安装及配置\"><a class=\"anchor\" href=\"#git-安装及配置\">#</a> Git 安装及配置</h3>\n<blockquote>\n<p>Git 已经在 22-12-16 安装但未记录</p>\n<p>22-12-20 使用 Steam<ins> 设置代理代替 Clash，原来使用 Clash 时需设置手动代理，给 Git 也设置了代理，在使用 Steam</ins> 导致 GitHub 无法访问，删除原来的代理即可</p>\n</blockquote>\n<p> </p>\n<h5 id=\"安装-2\"><a class=\"anchor\" href=\"#安装-2\">#</a> 安装</h5>\n<ul>\n<li>\n<p>更新 apt</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt upgrade</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>下载 Git</p>\n<p><code>sudo apt install git</code></p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h5>\n<blockquote>\n<p>设置代理</p>\n</blockquote>\n<ul>\n<li>\n<p>使用命令设置 socks 或者 http 代理</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># http</span><br><span class=\"line\">git config --global http.proxy http://127.0.0.1:8080</span><br><span class=\"line\">git config --global https.proxy https://127.0.0.1:8080</span><br><span class=\"line\"></span><br><span class=\"line\"># socks</span><br><span class=\"line\">git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27; </span><br><span class=\"line\">git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>使用命令行取消代理</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy http</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>直接修改.gitconfig 文件，新建或修改以下内容</p>\n<p><code>vim ~/.gitconfig</code></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[http]</span><br><span class=\"line\"></span><br><span class=\"line\">proxy = socks5://127.0.0.1:1080</span><br><span class=\"line\"></span><br><span class=\"line\">[https]</span><br><span class=\"line\"></span><br><span class=\"line\">proxy = socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h5>\n<ul>\n<li>\n<p>初始化本地仓库</p>\n<p><code>git init</code></p>\n</li>\n<li>\n<p>更新修改</p>\n<p><code>git add .</code></p>\n</li>\n<li>\n<p>提交版本到本地</p>\n<p><code>git commit -m '版本号'</code></p>\n</li>\n<li>\n<p>添加远程仓库链接</p>\n<p><code>git remote add origin [repository address]</code></p>\n</li>\n<li>\n<p>更新本地文件到远程仓库</p>\n<blockquote>\n<p>由于远程库是空的，我们第一次推送 <code>master</code>  分支时，加上了 <code>-u</code>  参数，Git 不但会把本地的 <code>master</code>  分支内容推送的远程新的 <code>master</code>  分支，还会把本地的 <code>master</code>  分支和远程的 <code>master</code>  分支关联起来，在以后的推送或者拉取时就可以简化命令</p>\n</blockquote>\n<p><code>git push -u origin master</code></p>\n<ul>\n<li>\n<ul>\n<li><code>git push -u origin master</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/log/log23-01-03/",
            "url": "http://example.com/2024/04/19/log/log23-01-03/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.049Z",
            "content_html": "<h3 id=\"蓝牙配对\"><a class=\"anchor\" href=\"#蓝牙配对\">#</a> 蓝牙配对</h3>\n<p>直接在设置中连接就完成了，但是这里记录一个帖子，以便以后有问题的时候使用</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/563070545\">ubuntu 22.04 终端下设置蓝牙连接</a></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/log/log23-01-12/",
            "url": "http://example.com/2024/04/19/log/log23-01-12/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.048Z",
            "content_html": "<h3 id=\"游戏手柄\"><a class=\"anchor\" href=\"#游戏手柄\">#</a> 游戏手柄</h3>\n<h5 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h5>\n<p>Python 开发游戏时想加入手柄</p>\n<p> </p>\n<h5 id=\"驱动安装\"><a class=\"anchor\" href=\"#驱动安装\">#</a> 驱动安装</h5>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装xbox驱动</span></span><br><span class=\"line\">sudo apt install xboxdrv</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装ps3驱动</span></span><br><span class=\"line\">sudo apt install joy2key</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装手柄测试软件</span></span><br><span class=\"line\">sudo apt install joystick</span><br></pre></td></tr></table></figure></p>\n<p> </p>\n<h5 id=\"检测设备\"><a class=\"anchor\" href=\"#检测设备\">#</a> 检测设备</h5>\n<p>查看设备信息</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /proc/bus/input/devices</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>在输出中找到游戏手柄对应的信息</p>\n</blockquote>\n<p> </p>\n<p>查看数据输出</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat dev/input/js0 | hexdump</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>检测手柄事件，会实时更新在输出窗口</p>\n</blockquote>\n<p> </p>\n<p>测试手柄</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jstest </span><br></pre></td></tr></table></figure></p>\n<p> </p>\n<h5 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\">#</a> 参考资料</h5>\n<p><a href=\"https://blog.csdn.net/jrc_january/article/details/74537363\">在 UBUNTU 中使用北通 USB 游戏手柄_rongchun.ji 的博客 - CSDN 博客_ubuntu 安装北通游戏手柄驱动</a></p>\n<p><a href=\"https://blog.csdn.net/eastcnme/article/details/124966204\">xbox one 无线手柄在 ubuntu 下的对接开发_xboxdrv_Embedded engineer 的博客 - CSDN 博客</a></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/log/log22-12-17/",
            "url": "http://example.com/2024/04/19/log/log22-12-17/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.047Z",
            "content_html": "<h3 id=\"python-day01\"><a class=\"anchor\" href=\"#python-day01\">#</a> python day01</h3>\n<ul>\n<li></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/log/log22-12-18/",
            "url": "http://example.com/2024/04/19/log/log22-12-18/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.046Z",
            "content_html": "<h3 id=\"安装marktext插件\"><a class=\"anchor\" href=\"#安装marktext插件\">#</a> 安装 MarkText 插件</h3>\n<h5 id=\"资源\"><a class=\"anchor\" href=\"#资源\">#</a> 资源</h5>\n<ul>\n<li>\n<p><a href=\"https://github.com/marktext/marktext\">Markext - GitHub Repository</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/m0_51426055/article/details/125815180\">Markext 设置</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/S_AGZX/article/details/125608452\">MarkDown 设置翻译</a></p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"appimage\"><a class=\"anchor\" href=\"#appimage\">#</a> Appimage</h5>\n<blockquote>\n<p>多年以来，我们一直使用 DEB packages 来管理 Debian/Ubuntu 的软件包，使用 RPM 管理 Fedora/SUSE 的软件包。</p>\n<p>用户使用这些包管理工具可以很方便的安装软件，但是这些仍然满足不了开发人员的需求。开发人员不得不开发更多的工具。这时 AppImage 来到了我们面前。AppImage 使用通用的软件格式，通过将整个软件打包成 AppImage, 一个包包含了所有的功能。并且几乎可以在所有的 linux 发行版本中使用。</p>\n<p>AppImage 不需要像传统的那样安装。通常我们安装 linux 软件将会在不同的目录生成多个文件，并且需要 root 权限来对系统进行修改。AppImage 不需要这么做。事实上，AppImage 并不需要安装。AppImage 是一个压缩的镜像文件，它包含所有运行所需要的依赖和库文件。你可以直接执行 AppImage 文件不需要安装。当你把 AppImage 文件删除，整个软件也被删除了。你可以把它当成 windows 系统中的那些免安装的 exe 文件</p>\n</blockquote>\n<ul>\n<li>\n<p>AppImage 的特性或者优点</p>\n<ul>\n<li>\n<p>可以运行在各种平台</p>\n</li>\n<li>\n<p>不需要安装，直接执行</p>\n</li>\n<li>\n<p>便携性：可以在位置执行</p>\n</li>\n<li>\n<p>App 只读</p>\n</li>\n<li>\n<p>卸载便利，只需要删除 AppImage 文件即可</p>\n</li>\n<li>\n<p>不需要 root 权限，不需要修改系统文件</p>\n</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h5>\n<ul>\n<li>chmod +x app.appimage</li>\n</ul>\n<p> </p>\n<h5 id=\"安装appimagelancher\"><a class=\"anchor\" href=\"#安装appimagelancher\">#</a> 安装 Appimagelancher</h5>\n<ul>\n<li>\n<p><code>sudo apt install software-properties-common</code></p>\n</li>\n<li>\n<p><code>sudo add-apt-repository ppa:appimagelauncher-team/stable</code></p>\n</li>\n<li>\n<p><code>sudo apt update</code></p>\n</li>\n<li>\n<p><code>sudo apt install appimagelauncher</code></p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"运行\"><a class=\"anchor\" href=\"#运行\">#</a> 运行</h5>\n<p>MarkText 时会自动打开 Appimagelancher，会自动添加快捷方式到程序列表</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/log/log22-12-16/",
            "url": "http://example.com/2024/04/19/log/log22-12-16/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.044Z",
            "content_html": "<h3 id=\"使用ventoy安装多系统\"><a class=\"anchor\" href=\"#使用ventoy安装多系统\">#</a> 使用 ventoy 安装多系统</h3>\n<ul>\n<li>MBR GPT 区别</li>\n</ul>\n<h3 id=\"开机没有系统选择界面\"><a class=\"anchor\" href=\"#开机没有系统选择界面\">#</a> 开机没有系统选择界面</h3>\n<ol>\n<li>使用 boot-repairs 修复引导程序\n<ul>\n<li>有报错，uefi 和 legecy 冲突，改 bios 设置为 uefi（或仅 uefi）</li>\n</ul>\n</li>\n<li>重启后更新 grub\n<ul>\n<li><code>sudo update-grub</code></li>\n<li><code>sudo update-grub2</code></li>\n</ul>\n</li>\n<li>知识点\n<ul>\n<li>学习</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"主文件目录中文文件名改为英文\"><a class=\"anchor\" href=\"#主文件目录中文文件名改为英文\">#</a> 主文件目录中文文件名改为英文</h3>\n<ul>\n<li>切换语言，中文切换到英文，重启后同意更改文件名</li>\n<li>再从英文切换到中文，重启后不同意更改文件名且不再提醒</li>\n</ul>\n<h3 id=\"安装浏览器\"><a class=\"anchor\" href=\"#安装浏览器\">#</a> 安装浏览器</h3>\n<ul>\n<li>chrome</li>\n<li>edge</li>\n</ul>\n<h3 id=\"vpn\"><a class=\"anchor\" href=\"#vpn\">#</a> VPN</h3>\n<ul>\n<li>仅渡口没有 clash</li>\n</ul>\n<h3 id=\"替换grub主题\"><a class=\"anchor\" href=\"#替换grub主题\">#</a> 替换 grub 主题</h3>\n<ul>\n<li><a href=\"https://www.gnome-look.org/browse/cat/109/\">grub 主题资源</a></li>\n<li>其中一个主题 dedsec ，运行 pyton 脚本后需要更新 grub，且网站上的资源不能用，github 上的仓库可以用</li>\n</ul>\n<h3 id=\"修改分区\"><a class=\"anchor\" href=\"#修改分区\">#</a> 修改分区</h3>\n<ul>\n<li>没有尝试，暂时根目录够用</li>\n<li>根目录分区多给点，因为很多软件默认安装在根目录</li>\n<li>有需要可以尝试的方法\n<ul>\n<li>gparted（可能需要借助 u 盘，因为 ubuntu 无法卸载正在使用的挂在点，/home 的进程非常多，一旦杀掉就死机）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"安装vscode\"><a class=\"anchor\" href=\"#安装vscode\">#</a> 安装 vscode</h3>\n<h3 id=\"vscode-markdown\"><a class=\"anchor\" href=\"#vscode-markdown\">#</a> vscode markdown</h3>\n<ul>\n<li>Markdown All in One</li>\n<li>Markdown Preview Enhanced</li>\n<li>Paste Image</li>\n</ul>\n<h3 id=\"安装git建立一个linux操作日志\"><a class=\"anchor\" href=\"#安装git建立一个linux操作日志\">#</a> 安装 git，建立一个 linux 操作日志</h3>\n<h3 id=\"修改输入法\"><a class=\"anchor\" href=\"#修改输入法\">#</a> 修改输入法</h3>\n<h3 id=\"安装clash\"><a class=\"anchor\" href=\"#安装clash\">#</a> 安装 Clash</h3>\n<ul>\n<li>相关教程\n<ul>\n<li><a href=\"https://www.cnblogs.com/mozhen/p/16306061.html\">桌面版下载教程及桌面图标设置</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/430035973\">命令行下载教程及自定义 service 设置</a></li>\n</ul>\n</li>\n<li>安装过程整理</li>\n<li>问题\n<ul>\n<li>安装完成后需要通过界面点击<a href=\"https://clash.razord.top/\"> Clash Core</a> 打开<strong>网页端</strong>\n<ul>\n<li>不通过桌面端需要配置<strong>主机端口</strong>及<strong>密钥</strong></li>\n<li><strong>只需打开一次</strong>，此后直接打开桌面端即可</li>\n</ul>\n</li>\n<li>关闭 clash 后主机由于代理设置不能正常访问网络，需要关闭代理\n<ul>\n<li>测试：主机关闭代理设置，网页端 -&gt; 设置 -&gt; 设置为系统代理</li>\n<li>自动化：设置自定义服务，在退出时执行关闭代理命令（或者直接修改 clash 本身的 quit 相关脚本）\n<ul>\n<li>测试 hellotest.service</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>确定 clash 的打开方式，方便快捷\n<ul>\n<li>最终添加快捷方式</li>\n<li>将 <code>clash.desktop</code>  添加到 <code>/usr/share/applications</code>  可以在 “显示应用程序” 中显示</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"修改默认浏览器为-edge\"><a class=\"anchor\" href=\"#修改默认浏览器为-edge\">#</a> 修改默认浏览器为 edge</h3>\n<ul>\n<li><code>sudo update-alternatives --config x-www-browser</code></li>\n<li>设置 =&gt; 默认应用程序 =&gt; 浏览器</li>\n</ul>\n<h3 id=\"ubuntu2204lts-安装-imagemagick源码\"><a class=\"anchor\" href=\"#ubuntu2204lts-安装-imagemagick源码\">#</a> Ubuntu22.04LTS 安装 ImageMagick (源码)</h3>\n<ul>\n<li><a href=\"https://www.xtuos.com/5754.html\">如何在 Ubuntu 22.04 LTS 上安装 ImageMagick</a></li>\n<li>升级库和安装依赖\n<ul>\n<li><code>sudo apt update</code></li>\n<li><code>sudo apt upgrade</code></li>\n<li>安装 gcc、build build-essential、make</li>\n<li><code>sudo apt install make build-essential automake libltdl-dev git</code></li>\n</ul>\n</li>\n<li>从 github 上下载源码（网络问题没 clone）\n<ul>\n<li><a href=\"https://github.com/ImageMagick/ImageMagick\">Github : ImageMagick - repository</a></li>\n<li><code>unzip [file-name]</code></li>\n<li><code>cd [file-name]</code></li>\n</ul>\n</li>\n<li>初始化\n<ul>\n<li><code>./configure</code></li>\n<li><code>./configure --with-modules</code></li>\n</ul>\n</li>\n<li>编译\n<ul>\n<li><code>sudo make</code></li>\n<li><code>sudo make install</code></li>\n</ul>\n</li>\n<li>动态链接库\n<ul>\n<li><code>sudo ldconfig /usr/local/lib</code></li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/log/log23-01-05/",
            "url": "http://example.com/2024/04/19/log/log23-01-05/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.044Z",
            "content_html": "<h3 id=\"安装微信\"><a class=\"anchor\" href=\"#安装微信\">#</a> 安装微信</h3>\n<h5 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h5>\n<p>最近转手机文件太麻烦了，所以安装一个微信</p>\n<p> </p>\n<h5 id=\"更新-apt\"><a class=\"anchor\" href=\"#更新-apt\">#</a> 更新 apt</h5>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure></p>\n<p> </p>\n<h5 id=\"添加-deep-wine-仓库\"><a class=\"anchor\" href=\"#添加-deep-wine-仓库\">#</a> 添加 deep-wine 仓库</h5>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O- https://deepin-wine.i-m.dev/setup.sh | sh</span><br></pre></td></tr></table></figure></p>\n<p> </p>\n<h5 id=\"安装微信-2\"><a class=\"anchor\" href=\"#安装微信-2\">#</a> 安装微信</h5>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install com.qq.weixin.deepin</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://deepin-wine.i-m.dev/\">deep-wine 支持应用列表</a></p>\n<p> </p>\n<h5 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h5>\n<ul>\n<li>\n<p><em><strong>下载失败</strong></em></p>\n<blockquote>\n<p>apt install 失败，并未遇见，但是记录一下</p>\n</blockquote>\n<p>可能会出现以下报错信息</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install com.qq.weixin.deepin</span><br><span class=\"line\">正在读取软件包列表... 完成</span><br><span class=\"line\">正在分析软件包的依赖关系树... 完成</span><br><span class=\"line\">正在读取状态信息... 完成                 </span><br><span class=\"line\">有一些软件包无法被安装。如果您用的是 unstable 发行版，这也许是</span><br><span class=\"line\">因为系统无法达到您要求的状态造成的。该版本中可能会有一些您需要的软件</span><br><span class=\"line\">包尚未被创建或是它们已被从新到(Incoming)目录移出。</span><br><span class=\"line\">下列信息可能会对解决问题有所帮助：</span><br><span class=\"line\"></span><br><span class=\"line\">下列软件包有未满足的依赖关系：</span><br><span class=\"line\"> libldap-2.4-2 : 依赖: libsasl2-2 (&gt;= 2.1.27.1) 但是 2.1.27+dfsg2-3ubuntu1 正要被安装</span><br><span class=\"line\">E: 无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系</span><br></pre></td></tr></table></figure></p>\n<p>问题原因</p>\n<blockquote>\n<p>基本判断为 ubuntu 22.04 的问题（难得一次不是这个仓库的问题，也不是 deepin 的问题），高或者低版本的 ubuntu 应该还好，可能就 22.04 有这个问题。</p>\n<p>deepin 的包依赖 <code>libldap-2.4-2</code> ，但是应该对版本没要求。怪就怪在 ubuntu 22.04 仓库里的 <code>libldap-2.4-2</code>  依赖 <code>libsasl2-2 (不低于2.1.27.1版本)</code> ，可是后者在源里压根不存在。<br />\n所以即使不为了 deepin-wine，你直接手动 <code>apt install libldap-2.4-2</code>  也一样报错。<br />\n这个问题属于更新过程中的纰漏了，估计过几个月官方应该会解决。</p>\n</blockquote>\n<p>解决方法</p>\n<p>去<a href=\"http://mirrors.163.com/ubuntu/pool/main/c/cyrus-sasl2/\"> Index of /ubuntu/pool/main/c/cyrus-sasl2/</a> 下载<a href=\"http://mirrors.163.com/ubuntu/pool/main/c/cyrus-sasl2/libsasl2-2_2.1.28+dfsg-6ubuntu2_amd64.deb\"> libsasl2-2_2.1.28+dfsg-6ubuntu2_amd64.deb</a> 和<a href=\"http://mirrors.163.com/ubuntu/pool/main/c/cyrus-sasl2/libsasl2-modules-db_2.1.28+dfsg-6ubuntu2_amd64.deb\"> libsasl2-modules-db_2.1.28+dfsg-6ubuntu2_amd64.deb</a> 先手动 <code>dpkg -i xxx.deb</code>  安装，然后正常 apt</p>\n</li>\n<li>\n<p><em><strong>无法打开用户界面</strong></em></p>\n<p>修改  <code>/opt/apps/com.qq.weixin.deepin/files/run.sh</code>  文件，注释掉设置  <code>WINEPREDLL</code>  环境变量的一行</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-export WINEPREDLL=&quot;$ARCHIVE_FILE_DIR/dlls&quot;</span><br><span class=\"line\">+# export WINEPREDLL=&quot;$ARCHIVE_FILE_DIR/dlls&quot;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<p> </p>\n<h5 id=\"tips\"><a class=\"anchor\" href=\"#tips\">#</a> tips</h5>\n<p>聊天下载的问题打不开，在用户文件夹下的  <code>~/Documents/WeChat Files</code>  中能够找到，应该有微信号对应的文件夹，进入之后有  <code>FileStorage</code>  文件夹用于存储用户文件，还有其他文件夹</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drwxrwxr-x 14 ***** ***** 4096 1月 5 00:35 ./</span><br><span class=\"line\">drwxrwxr-x 8  ***** ***** 4096 1月 5 00:35 ../</span><br><span class=\"line\">drwxrwxr-x 3  ***** ***** 4096 1月 5 00:35 Cache/</span><br><span class=\"line\">drwxrwxr-x 8  ***** ***** 4096 1月 5 00:35 CustomEmotion/</span><br><span class=\"line\">drwxrwxr-x 5  ***** ***** 4096 1月 5 00:35 Fav/</span><br><span class=\"line\">drwxrwxr-x 2  ***** ***** 4096 1月 5 00:35 File/</span><br><span class=\"line\">drwxrwxr-x 4  ***** ***** 4096 1月 5 00:35 General/</span><br><span class=\"line\">drwxrwxr-x 3  ***** ***** 4096 1月 5 00:35 Image/</span><br><span class=\"line\">drwxrwxr-x 13 ***** ***** 4096 1月 5 16:14 MsgAttach/</span><br><span class=\"line\">drwxrwxr-x 2  ***** ***** 4096 1月 5 00:35 PAG/</span><br><span class=\"line\">drwxrwxr-x 3  ***** ***** 4096 1月 5 00:35 Sns/</span><br><span class=\"line\">drwxrwxr-x 3  ***** ***** 4096 1月 5 16:20 Temp/</span><br><span class=\"line\">drwxrwxr-x 2  ***** ***** 4096 1月 5 00:35 TempFromPhone/</span><br><span class=\"line\">drwxrwxr-x 2  ***** ***** 4096 1月 5 00:35 Video/</span><br></pre></td></tr></table></figure></p>\n<p>可以看到，只有 MsgAttach 和 Temp 最近有修改，查看 Temp 中的文件后发现这个文件夹应该是用于存储登陆信息的，MsgAttach 通过名字推断应该是存储聊天附带内容，进入后会有一系列由数字和字母组成的 32 位名称的文件夹，每个文件夹可能对应一个聊天，找到最近修改的文件夹进入就能找到了，一次成功的记录：</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Documents/WeChat Files/wxid_******/FileStorage/MsgAttach/******/File/2023-01</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"聊天记录破解\"><a class=\"anchor\" href=\"#聊天记录破解\">#</a> 聊天记录破解</h5>\n<p><a href=\"https://www.zhihu.com/question/45070018?sort=created\">微信电脑版的聊天记录怎么解密？</a></p>\n<p><a href=\"https://www.iculture.cc/knowledge/pig=22381\">微信好友列表 / 聊天记录导出小工具 支持全版本 支持导出 CSV-FancyPig's blog</a></p>\n<p> </p>\n<h5 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\">#</a> 参考资料</h5>\n<p><a href=\"https://blog.csdn.net/weixin_38493195/article/details/124870781\">Ubuntu 系列学习（四）ubuntu 22.04 安装 微信、QQ_毅博明喆的博客 - CSDN 博客_ubuntu 22.04 微信</a></p>\n<p><a href=\"https://blog.csdn.net/yqq1997/article/details/128093339\">解决 Ubuntu22.04 微信打不开的问题_youngqqcn 的博客 - CSDN 博客_ubuntu 安装微信打不开</a></p>\n<p><a href=\"https://github.com/zq1997/deepin-wine/issues/312\">ubuntu 22.04.1 安装依赖问题・Issue #312・zq1997/deepin-wine・GitHub</a></p>\n<p> </p>\n<p>&lt;hr&gt;</p>\n<h3 id=\"百度云盘加速\"><a class=\"anchor\" href=\"#百度云盘加速\">#</a> 百度云盘加速</h3>\n<h5 id=\"概述-2\"><a class=\"anchor\" href=\"#概述-2\">#</a> 概述</h5>\n<p>事实上不只限于百度网盘，这个主要是多线程下载</p>\n<p> </p>\n<h5 id=\"aria2-安装及使用\"><a class=\"anchor\" href=\"#aria2-安装及使用\">#</a> Aria2 安装及使用</h5>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install aria2</span><br></pre></td></tr></table></figure></p>\n<p>使用</p>\n<p>有的链接需要加双引号，否则会下载失败</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aria2c 下载链接地址</span><br></pre></td></tr></table></figure></p>\n<p> </p>\n<h5 id=\"安装获取直链脚本\"><a class=\"anchor\" href=\"#安装获取直链脚本\">#</a> 安装获取直链脚本</h5>\n<p><a href=\"https://greasyfork.org/zh-CN/scripts/436446-%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B\">网盘直链下载助手</a></p>\n<p> </p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/log/log23-04-11/",
            "url": "http://example.com/2024/04/19/log/log23-04-11/",
            "title": "",
            "date_published": "2024-04-19T10:43:08.035Z",
            "content_html": "<h3 id=\"卸载gtk3导致gnome崩溃\"><a class=\"anchor\" href=\"#卸载gtk3导致gnome崩溃\">#</a> 卸载 GTK+3 导致 GNOME 崩溃</h3>\n<h5 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h5>\n<p>最近运行一个软件需要用到 gtk 环境，下载 gtk+3 不能使用，打算卸载重装 gtk+2，卸载后  <code>gnome</code>  疑似崩溃：</p>\n<ul>\n<li>\n<p>开始界面很多图标消失</p>\n</li>\n<li>\n<p>终端变成了 XTerm</p>\n</li>\n<li>\n<p>大多数功能仍能使用（小组件也可以）</p>\n</li>\n<li>\n<p>重启过后进入不了图形界面</p>\n</li>\n</ul>\n<p>卸载 gtk+3 后 Ubuntu 无法进入图形界面</p>\n<p>运行过以下命令</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt autoremove libgtk-3-0</span><br><span class=\"line\">sudo apt autoremove libgtk-3-dev</span><br></pre></td></tr></table></figure></p>\n<p> </p>\n<h5 id=\"原因\"><a class=\"anchor\" href=\"#原因\">#</a> 原因</h5>\n<p>可能的原因是 GTK 是 GNOME 的一个依赖库</p>\n<p> </p>\n<h5 id=\"解决办法\"><a class=\"anchor\" href=\"#解决办法\">#</a> 解决办法</h5>\n<p>卸载  <code>gnome</code>  并重装</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt upgrade</span><br><span class=\"line\">sudo apt autoremove gnome</span><br><span class=\"line\">sudo apt install gnome</span><br></pre></td></tr></table></figure></p>\n<p> </p>\n<h5 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\">#</a> 参考资料</h5>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35386301/article/details/115374530\">ubuntu 进不去图形化界面系统解决方案_haley.du 的博客 - CSDN 博客</a></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/19/hello-world/",
            "url": "http://example.com/2024/04/19/hello-world/",
            "title": "Hello World",
            "date_published": "2024-04-19T09:22:27.559Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}